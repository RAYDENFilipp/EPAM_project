{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/utilities/stores.js","../src/utilities/helperFunctions.js","../src/components/Navbar/NavbarCollapse.svelte","../src/components/Navbar/Navbar.svelte","../src/components/Login/Login.svelte","../src/components/Imageslider/CarouselIndicators.svelte","../node_modules/svelte/transition/index.mjs","../src/media/img_lights_wide.jpg","../src/media/img_mountains_wide.jpg","../src/media/img_nature_wide.jpg","../src/components/Imageslider/CarouselSlides.svelte","../src/components/Imageslider/CarouselButton.svelte","../src/components/Imageslider/Imageslider.svelte","../src/components/Main/Pagination.svelte","../src/components/Main/Comment.svelte","../src/components/Main/CommentForm.svelte","../src/components/Main/Post.svelte","../src/components/Main/PostCreateForm.svelte","../src/components/Main/PostItem.svelte","../src/components/Main/SearchWidget.svelte","../src/components/Main/SortWidget.svelte","../src/components/Footer/Footer.svelte","../src/components/Main/Main.svelte","../src/media/about_cabins.jpg","../src/media/about_space.jpg","../src/media/about_tree.jpg","../src/components/About/About.svelte","../src/App.svelte","../node_modules/style-inject/dist/style-inject.es.js","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\n/** This store is used to keep track of changes made to\r\n * slide Index by any of the involved components and\r\n * to make changes by any of the involved components,\r\n * i.e. share state between indirectly related elements\r\n */\r\nfunction createSlideIndexStore() {\r\n  const { subscribe, update, set } = writable(0);\r\n  return {\r\n    subscribe,\r\n    increment: () => update(n => (n === 2 ? 0 : ++n)),\r\n    decrement: () => update(n => (n === 0 ? 2 : --n)),\r\n    set\r\n  };\r\n}\r\n\r\n/** This store is used to keep track of the current page number\r\n */\r\nfunction createPageCounterStore() {\r\n  const { subscribe, update, set } = writable(1);\r\n  return {\r\n    subscribe,\r\n    increment: () => update(n => ++n),\r\n    decrement: () => update(n => --n),\r\n    set\r\n  };\r\n}\r\n\r\nconst slideIndex = createSlideIndexStore();\r\nconst pageCurrent = createPageCounterStore();\r\nconst postObject = writable({});\r\nconst postPicked = writable(false);\r\nconst formPicked = writable(false);\r\nconst userLoggedIn = writable(null);\r\nconst submitType = writable(\"\");\r\nconst searchFilter = writable(\"\");\r\nconst sortDateFilter = writable(\"\");\r\nconst pagePicked = writable(\"/\");\r\n\r\nexport {\r\n  formPicked,\r\n  pageCurrent,\r\n  pagePicked,\r\n  postObject,\r\n  postPicked,\r\n  searchFilter,\r\n  slideIndex,\r\n  sortDateFilter,\r\n  submitType,\r\n  userLoggedIn\r\n};\r\n","/**\r\n * put a string query starting with '/'\r\n * after which the function will fetch data\r\n * from the server and returns a Promise which when resolved\r\n * returns a response of data (response is OK) or object with status and reason\r\n * text to be used as a fallback value; rejects with an error if any happened.\r\n *\r\n * @param {String} query\r\n * @returns Promise\r\n */\r\nfunction getData(query) {\r\n  return fetch(`http://localhost:3000${query}`)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return {\r\n        failed: !response.ok,\r\n        status: response.status,\r\n        reason: response.statusText\r\n      };\r\n    })\r\n    .catch(e => {\r\n      throw new Error(e);\r\n    });\r\n}\r\n\r\nfunction getUser(email, password) {\r\n  return fetch(\"http://localhost:3000/users\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const user = data.find(record => {\r\n        return record.email === email && record.password === password;\r\n      });\r\n      return user;\r\n    })\r\n    .catch(e => {\r\n      throw new Error(e);\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} name\r\n * @param {String} value\r\n * @param {Number} maxAge\r\n */\r\nfunction createCookie(name, value, maxAge) {\r\n  document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(\r\n    value\r\n  )}; max-age=${maxAge}`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} name\r\n * @param {Number} maxAge\r\n */\r\nfunction deleteCookie(name, maxAge) {\r\n  document.cookie = `${encodeURIComponent(name)}=; max-age=${maxAge}`;\r\n}\r\n\r\n/**\r\n * Here we look for the first occurence of property name we are trying\r\n * to find a value of.\r\n * Then, if found, we copy substring of the value assigned to the property\r\n * and return it.\r\n *\r\n * @param {String} propertyName\r\n * @returns cookie value\r\n */\r\nfunction getCookieFor(propertyName) {\r\n  const cookies = document.cookie;\r\n  const cookiesDecoded = decodeURIComponent(cookies);\r\n  const position = cookiesDecoded.indexOf(propertyName);\r\n\r\n  // ~(-1) = 0\r\n  if (~position) {\r\n    const start = position + propertyName.length + 1;\r\n    let end = cookiesDecoded.indexOf(\";\", start);\r\n    if (!~end) end = cookiesDecoded.length;\r\n\r\n    return cookiesDecoded.substring(start, end);\r\n  }\r\n}\r\n\r\n/**\r\n * put a string query starting with '/'\r\n * after which the function will send data\r\n * to the server\r\n *\r\n * @param {String} query\r\n * @param {String} [method=\"GET\"]\r\n * @param {Object} [body={}]\r\n * @returns\r\n */\r\nfunction sendData(query, method = \"GET\", body = {}) {\r\n  return fetch(`http://localhost:3000${query}`, {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  }).catch(e => {\r\n    throw new Error(e);\r\n  });\r\n}\r\n\r\n/**\r\n * array of months names to be used in the parseDate()\r\n */\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\n\r\n/**\r\n *\r\n *\r\n * @param {Date} date\r\n * @returns {month, year, datePrefixed, hours, minutes}\r\n */\r\nfunction parseDate(date) {\r\n  const dateObj = new Date(date);\r\n  const month = months[dateObj.getMonth()];\r\n  const year = dateObj.getFullYear();\r\n  const dateNumber = dateObj.getDate();\r\n  const hours = dateObj.getHours();\r\n  const minutes = dateObj.getMinutes();\r\n  const datePrefixed =\r\n    dateNumber === 1 || dateNumber === 31\r\n      ? dateNumber + \"st\"\r\n      : dateNumber === 2\r\n        ? dateNumber + \"nd\"\r\n        : dateNumber === 3 || dateNumber === 23\r\n          ? dateNumber + \"rd\"\r\n          : dateNumber + \"th\";\r\n\r\n  return { month, year, datePrefixed, hours, minutes };\r\n}\r\n\r\nfunction debounce(fn, ms) {\r\n  let timer;\r\n\r\n  return function(...args) {\r\n    if (timer) clearTimeout(timer);\r\n\r\n    timer = setTimeout(() => fn.apply(this, args), ms);\r\n  };\r\n}\r\n\r\nexport {\r\n  createCookie,\r\n  debounce,\r\n  deleteCookie,\r\n  getCookieFor,\r\n  getData,\r\n  getUser,\r\n  parseDate,\r\n  sendData\r\n};\r\n","<script>\r\n  import { deleteCookie, sendData } from \"../../utilities/helperFunctions\";\r\n  import { submitType, userLoggedIn, pagePicked } from \"../../utilities/stores\";\r\n  export let collapsed = true;\r\n\r\n  let links = [\r\n    { active: true, href: \"#home\", text: \"Home\" },\r\n    { active: false, href: \"#about\", text: \"About\" },\r\n    { active: false, href: \"#contacts\", text: \"Contacts\" }\r\n  ];\r\n  // links get highlighted on select\r\n  function handleClick(active, href, e) {\r\n    if (!active) {\r\n      links = links.map(link => {\r\n        link.active =\r\n          link.href === href || link.active ? !link.active : link.active;\r\n        return link;\r\n      });\r\n    }\r\n    // used for selective rendering on the App component\r\n    pagePicked.set(href);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @media (min-width: 768px) {\r\n    li {\r\n      border-right: 0.2rem solid;\r\n      min-width: 5rem;\r\n    }\r\n\r\n    li:first-child {\r\n      border-left: 0.2rem solid;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class:collapse={collapsed} class=\"navbar-collapse\">\r\n  <ul class=\"navbar-nav mr-auto\">\r\n    {#each links as { active, href, text }}\r\n      <li class:active class=\"nav-item border-light text-md-center\">\r\n        <a class=\"nav-link\" {href} on:click={e => handleClick(active, href, e)}>\r\n          {text}\r\n          {#if active}\r\n            <span class=\"sr-only\">(current)</span>\r\n          {/if}\r\n        </a>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n  <div class=\"form-inline mt-2 mt-md-0 mr-lg-2\">\r\n    <!-- selective rendering of login buttons depending on wheter user logged in or not -->\r\n    {#if $submitType === 'Sign Out'}\r\n      <!-- clears the cookie and the stores -->\r\n      <button\r\n        class=\"btn btn-outline-danger my-2 my-sm-0\"\r\n        on:click={() => {\r\n          deleteCookie('user_id', -5);\r\n          submitType.set('');\r\n          sendData(`/users/${$userLoggedIn}`, 'PATCH', { logged_in: false });\r\n          userLoggedIn.set(null);\r\n        }}>\r\n        Sign out\r\n      </button>\r\n    {:else}\r\n      <!-- opens a 'Sign In' modal -->\r\n      <button\r\n        class=\"btn btn-outline-light mr-sm-2\"\r\n        on:click={() => submitType.set('Sign In')}>\r\n        Sign In\r\n      </button>\r\n      <!-- opens a 'Sign Up' modal -->\r\n      <button\r\n        class=\"btn btn-outline-light my-2 my-sm-0\"\r\n        on:click={() => submitType.set('Sign Up')}>\r\n        Sign Up\r\n      </button>\r\n    {/if}\r\n  </div>\r\n</div>\r\n","<script>\r\n  import NavbarCollapse from \"./NavbarCollapse.svelte\";\r\n\r\n  // used to control behaviour of the navbar-toggler\r\n  let collapse = true;\r\n</script>\r\n\r\n<style>\r\n  :global(body) {\r\n    height: 93vh;\r\n    overflow: hidden;\r\n    padding-top: 7vh;\r\n  }\r\n\r\n  nav {\r\n    min-height: 7vh;\r\n  }\r\n</style>\r\n\r\n<nav class=\"navbar fixed-top navbar-expand-md navbar-dark bg-dark\">\r\n  <h1 class=\"navbar-brand my-0 ml-lg-5 p-0\">Project: Blog</h1>\r\n  <button class=\"navbar-toggler\" on:click={() => (collapse = !collapse)}>\r\n    <span class=\"navbar-toggler-icon\" />\r\n  </button>\r\n  <NavbarCollapse collapsed={collapse} />\r\n</nav>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { submitType, userLoggedIn } from \"../../utilities/stores\";\r\n  import {\r\n    sendData,\r\n    getUser,\r\n    createCookie,\r\n    getCookieFor\r\n  } from \"../../utilities/helperFunctions\";\r\n  let validated = false;\r\n\r\n  /* Here we check if there is any cookie in the browser and if so\r\nwe store that user_id in our store, userLoggedIn.\r\n*/\r\n  onMount(() => {\r\n    if (getCookieFor(\"user_id\")) {\r\n      const savedId = getCookieFor(\"user_id\");\r\n      userLoggedIn.set(parseInt(savedId, 10));\r\n      submitType.set(\"Sign Out\");\r\n    }\r\n  });\r\n\r\n  /* Submit function works in two different ways, on 'Sign In' and 'Sign Out.\r\nThe main difference between the two is that in the first case we check for a user email and password [1] in the database and get user's id into the store [2] on success. After that we update the databese that the user is online [3].\r\nFinally, we change the submitType store to switch the login buttons and create a cookie. [4]\r\nIf Signing in hasn't passed the check [1], we inform the user about that[5].\r\nOtherwise, msitake might be connected to server issues itself [6].\r\n\r\nIn the second case we check the email against the database first to make sure\r\nwe wouldn't create the very same user again [7] and if succesful we send\r\nthe request to the server and process it response in similar way as during Sign In [8].\r\nIf any failure happens, the steps are similar [9]\r\n\r\n*/\r\n  function submitLogin() {\r\n    const form = event.target;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    if ($submitType === \"Sign In\") {\r\n      getUser(email, password, userLoggedIn) //[1]\r\n        .then(result => {\r\n          if (result) {\r\n            userLoggedIn.set(parseInt(result.id, 10)); //[2]\r\n            sendData(`/users/${$userLoggedIn}`, \"PATCH\", {\r\n              logged_in: true //[3]\r\n            });\r\n            submitType.set(\"Sign Out\");\r\n            alert(\"Signing In Successful\");\r\n            createCookie(\"user_id\", $userLoggedIn, 3600); //[4]\r\n          } else {\r\n            alert(\"Password and/or email are wrong\"); //[5]\r\n          }\r\n        })\r\n        .catch(e => {\r\n          alert(\r\n            `Failed at Signin in.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}` //[6]\r\n          );\r\n        });\r\n    } else if ($submitType === \"Sign Up\") {\r\n      const body = {\r\n        email: email,\r\n        password: password,\r\n        username: form.username.value,\r\n        first_name: form.firstName.value,\r\n        last_name: form.lastName.value,\r\n        avatar: \"https://robohash.org/fugiatmagniatque.jpg?size=50x50&set=set1\",\r\n        logged_in: true\r\n      };\r\n      getUser(email, password, userLoggedIn).then(result => {\r\n        //[7]\r\n        if (result) {\r\n          alert(\"This user exists already\");\r\n        } else {\r\n          sendData(`/users`, \"POST\", body)\r\n            .then(response => {\r\n              if (response.ok) {\r\n                alert(\"Success\"); //[8]\r\n                submitType.set(\"Sign Out\");\r\n                return response.json();\r\n              } else {\r\n                alert(\"Failed at posting.\"); //[9]\r\n              }\r\n            })\r\n            .then(data => {\r\n              userLoggedIn.set(parseInt(data.id, 10)); //[8]\r\n              createCookie(\"user_id\", $userLoggedIn, 3600);\r\n            })\r\n            .catch(e => {\r\n              //[9]\r\n              alert(\r\n                `Failed at Signin up.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}`\r\n              );\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    background-color: white;\r\n    box-shadow: 0 13px 50px 3px black;\r\n    height: auto;\r\n    left: 50%;\r\n    position: fixed;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 400px;\r\n    z-index: 1000;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    form {\r\n      width: 90%;\r\n    }\r\n  }\r\n</style>\r\n\r\n<!-- Conditional render of different forms -->\r\n{#if $submitType === 'Sign Up' || $submitType === 'Sign In'}\r\n  <form\r\n    class:was-validated={validated}\r\n    class=\"px-4 py-3 rounded-lg\"\r\n    on:submit|preventDefault={submitLogin}>\r\n    <div class=\"form-group\">\r\n      <label for=\"submitEmail\">Email address</label>\r\n      <button type=\"button\" class=\"close\" on:click={() => submitType.set('')}>\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        id=\"submitEmail\"\r\n        name=\"email\"\r\n        required\r\n        placeholder=\"email@example.com\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"submitPassword\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        id=\"submitPassword\"\r\n        name=\"password\"\r\n        min-lenghth=\"8\"\r\n        required\r\n        placeholder=\"Password\" />\r\n    </div>\r\n    {#if $submitType === 'Sign Up'}\r\n      <div class=\"form-group\">\r\n        <label for=\"submitUsername\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"submitUsername\"\r\n          name=\"username\"\r\n          pattern=\"[\\w\\s]+\"\r\n          maxlength=\"50\"\r\n          placeholder=\"50 characters max...\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"submitFirstName\">First name</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"submitFirstName\"\r\n          name=\"firstName\"\r\n          pattern=\"[\\w\\s]+\"\r\n          required\r\n          placeholder=\"your name...\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"submitLastName\">Last name</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"submitLastName\"\r\n          name=\"lastName\"\r\n          pattern=\"[\\w\\s]+\"\r\n          required\r\n          placeholder=\"your Last name...\" />\r\n      </div>\r\n    {/if}\r\n    <button type=\"submit\" class=\"btn btn-primary\">{$submitType}</button>\r\n  </form>\r\n{/if}\r\n","<script>\r\n  import { slideIndex } from \"../../utilities/stores\";\r\n\r\n  let imageIndecies = [0, 1, 2];\r\n</script>\r\n\r\n<!-- Lower carousel indicators -->\r\n<ol class=\"carousel-indicators\">\r\n  {#each imageIndecies as index}\r\n    <li\r\n      class:active={index === $slideIndex}\r\n      on:click={() => slideIndex.set(index)} />\r\n  {/each}\r\n</ol>\r\n","import { cubicOut, cubicInOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { crossfade, draw, fade, fly, scale, slide };\n","export default \"media/img_lights_wide.jpg\"","export default \"media/img_mountains_wide.jpg\"","export default \"media/img_nature_wide.jpg\"","<script>\r\n  import { slideIndex } from \"../../utilities/stores\";\r\n  import { fade } from \"svelte/transition\";\r\n\r\n  /* Media to bundle */\r\n  import img1 from \"../../media/img_lights_wide.jpg\";\r\n  import img2 from \"../../media/img_mountains_wide.jpg\";\r\n  import img3 from \"../../media/img_nature_wide.jpg\";\r\n\r\n  let images = [\r\n    {\r\n      id: 0,\r\n      src: img1,\r\n      caption: \"First title\",\r\n      color: \"text-light\"\r\n    },\r\n    {\r\n      id: 1,\r\n      src: img2,\r\n      caption: \"Second Title\",\r\n      color: \"text-light\"\r\n    },\r\n    {\r\n      id: 2,\r\n      src: img3,\r\n      caption: \"Third Title\",\r\n      color: \"text-light\"\r\n    }\r\n  ];\r\n\r\n  /** with this 'reactive declaration' we can handle change of the store's value\r\n   * and draw a respective slider\r\n   * */\r\n  $: itemtoDraw = images[$slideIndex];\r\n</script>\r\n\r\n<style>\r\n  .carousel {\r\n    background: no-repeat center center scroll;\r\n    background-size: cover;\r\n    height: 250px;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    .carousel {\r\n      height: 200px;\r\n    }\r\n    .carousel__caption {\r\n      width: 65%;\r\n    }\r\n  }\r\n\r\n  .carousel__caption--transparent {\r\n    opacity: 0.8;\r\n  }\r\n</style>\r\n\r\n<div class=\"carousel-inner\">\r\n\r\n  {#each images as { id, src, caption, color }}\r\n    <!-- one of the ways we can render only one slider to the DOM instead of three -->\r\n    {#if $slideIndex === id}\r\n    <!-- Slider with picture inside -->\r\n      <div\r\n        class:active={id === $slideIndex}\r\n        class=\"carousel carousel-item d-flex flex-column justify-content-center\r\n        align-items-center\"\r\n        style=\"background-image: url({src});\"\r\n        transition:fade>\r\n        <!-- Slider's caption -->\r\n        <section\r\n          class=\"carousel__caption carousel__caption--transparent {color}\r\n          bg-dark px-2 mx-auto my-5\">\r\n          <h2>{caption}</h2>\r\n          <p class=\"h5\">This is a paragraph for the {caption}.</p>\r\n        </section>\r\n      </div>\r\n    {/if}\r\n  {/each}\r\n</div>\r\n","<script>\r\n  export let direction;\r\n  export let screenReaderValue;\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    background: transparent;\r\n    max-width: 4rem;\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  button:focus {\r\n    opacity: 0.5;\r\n  }\r\n</style>\r\n\r\n<button class=\"carousel-control-{direction} border-0\" on:click>\r\n  <span class=\"carousel-control-{direction}-icon\" aria-hidden=\"true\" />\r\n  <span class=\"sr-only\">{screenReaderValue}</span>\r\n</button>\r\n","<script>\r\n  import { slideIndex } from \"../../utilities/stores\";\r\n  import { onMount, beforeUpdate } from \"svelte\";\r\n  import CarouselIndicators from \"./CarouselIndicators.svelte\";\r\n  import CarouselSlides from \"./CarouselSlides.svelte\";\r\n  import CarouselButton from \"./CarouselButton.svelte\";\r\n\r\n  let autoSlideInterval;\r\n\r\n  /** In case If user's frequency of clicking interferes with\r\n   * the interval we clear the interval first\r\n   */\r\n  beforeUpdate(() => {\r\n    if (autoSlideInterval) clearInterval(autoSlideInterval);\r\n  });\r\n\r\n  // this sets autoslider to run when the component is mounted to the DOM\r\n  onMount(() => {\r\n    autoSlideInterval = setInterval(() => {\r\n      slideIndex.increment();\r\n    }, 7000);\r\n    // when component is unmounted (onDestroy event) we clear the interval\r\n    return () => clearInterval(autoSlideInterval);\r\n  });\r\n</script>\r\n\r\n<header id=\"home\" class=\" carousel slide h-25 pt-2\" data-ride=\"carousel\">\r\n  <CarouselIndicators />\r\n  <CarouselSlides />\r\n  <CarouselButton\r\n    direction=\"prev\"\r\n    screenReaderValue=\"Previous\"\r\n    on:click={slideIndex.decrement} />\r\n  <CarouselButton\r\n    direction=\"next\"\r\n    screenReaderValue=\"Next\"\r\n    on:click={slideIndex.increment} />\r\n</header>\r\n","<script>\r\n  import { beforeUpdate } from \"svelte\";\r\n  import { getData } from \"../../utilities/helperFunctions\";\r\n  import { searchFilter, pageCurrent } from \"../../utilities/stores\";\r\n  export let pageEnd = false;\r\n\r\n// prefetch of the next page to see if that page is empty and if so, there is no need to have a button to there\r\n  getData(`/posts?${$searchFilter}_page=${$pageCurrent + 1}`).then(data => {\r\n    pageEnd = data.length === 0;\r\n  });\r\n</script>\r\n\r\n<ul class=\"pagination justify-content-center mb-4\">\r\n  {#if $pageCurrent > 1}\r\n    <li class=\"page-item\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        on:click={pageCurrent.decrement}>\r\n        ← Older\r\n      </button>\r\n    </li>\r\n  {/if}\r\n\r\n  {#if !pageEnd}\r\n    <li class=\"page-item\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        on:click={pageCurrent.increment}>\r\n        Newer →\r\n      </button>\r\n    </li>\r\n  {/if}\r\n</ul>\r\n","<script>\r\n  import {\r\n    getData,\r\n    parseDate,\r\n    sendData\r\n  } from \"../../utilities/helperFunctions\";\r\n  import { postObject, userLoggedIn } from \"../../utilities/stores\";\r\n\r\n  export let user_id, comment, date, index, authorId;\r\n\r\n  // derived comments and postId from the store\r\n  let comments = $postObject.comments;\r\n  let postId = $postObject.id;\r\n\r\n  const { month, year, datePrefixed, hours, minutes } = parseDate(date);\r\n  // here we get all teh users to fetch their avatars, names etc.\r\n  const userPromise = getData(`/users/${user_id}`);\r\n\r\n  function deleteComment() {\r\n    comments.splice(index, 1);\r\n    sendData(`/posts/${postId}`, \"PATCH\", { comments: comments })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // to trigger reactive rerender we should update our store\r\n          postObject.update(n => {\r\n            n.comments = comments;\r\n            return n;\r\n          });\r\n        } else {\r\n          alert(\"Failed at deleting the comment\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert(\r\n          `Failed at deleting the comment.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}`\r\n        );\r\n      });\r\n  }\r\n</script>\r\n\r\n<style>\r\n/* green circle near user's avatars that are online */\r\n  .logged-in::before {\r\n    border: 4px solid green;\r\n    border-radius: 50%;\r\n    bottom: -2.5rem;\r\n    box-shadow: 0 0 8px 1px green;\r\n    content: \"\";\r\n    display: block;\r\n    left: 1rem;\r\n    position: relative;\r\n    width: 4px;\r\n  }\r\n</style>\r\n\r\n{#await userPromise then user}\r\n  <section class:logged-in={user.logged_in} class=\"media mb-4\">\r\n    <img\r\n      class=\"d-flex mr-3 rounded-circle\"\r\n      src={user.avatar}\r\n      alt=\"Avatar {user_id}\" />\r\n    <div class=\"media-body\">\r\n      <div class=\"d-flex justify-content-between mt-0\">\r\n        <h5>{user.first_name} {user.last_name}</h5>\r\n        <!-- only comment author and post owner can delete comments -->\r\n        {#if $userLoggedIn === user_id || authorId === $userLoggedIn}\r\n          <button type=\"button\" class=\"btn btn-danger\" on:click={deleteComment}>\r\n            <i class=\"far fa-trash-alt\" />\r\n          </button>\r\n        {/if}\r\n      </div>\r\n      <p>{hours}:{minutes}, {month} {datePrefixed}, {year}</p>\r\n      <p>{comment}</p>\r\n    </div>\r\n  </section>\r\n{/await}\r\n","<script>\r\n  import { sendData } from \"../../utilities/helperFunctions\";\r\n  import { postObject, userLoggedIn } from \"../../utilities/stores\";\r\n  let textarea = \"\";\r\n  let comments = $postObject.comments;\r\n  let postId = $postObject.id;\r\n\r\n  const main = document.querySelector(\"[data-window='main']\");\r\n\r\n  function updateComment() {\r\n    comments.push({\r\n      user_id: $userLoggedIn,\r\n      comment: textarea,\r\n      date: new Date().toISOString()\r\n    });\r\n    sendData(`/posts/${postId}`, \"PATCH\", { comments: comments })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // to trigger rerender we need to update the store\r\n          postObject.update(n => {\r\n            n.comments = comments;\r\n            return n;\r\n          });\r\n        } else { //if update operation was unsuccessful\r\n          alert(\"Failed at posting the comment\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert( //id the server is down\r\n          `Failed at posting the comment.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}`\r\n        );\r\n      });\r\n    textarea = \"\";\r\n    main.scrollTo(0, main.scrollHeight);\r\n  }\r\n</script>\r\n\r\n<div class=\"card my-4\">\r\n  <form>\r\n    <label for=\"comment\" class=\"card-header h5 w-100\">Leave a Comment:</label>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          bind:value={textarea}\r\n          id=\"comment\"\r\n          class=\"form-control\"\r\n          rows=\"3\" />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary\"\r\n        on:click|preventDefault={updateComment}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","<script>\r\n  import Comment from \"./Comment.svelte\";\r\n  import CommentForm from \"./CommentForm.svelte\";\r\n  import { postObject, postPicked, userLoggedIn } from \"../../utilities/stores\";\r\n\r\n  let { id, title, slogan, text, authorPromise, date } = $postObject;\r\n</script>\r\n\r\n<div class=\"col-lg-8 mx-auto mt-2\">\r\n\r\n  <button class=\"btn btn-primary\" on:click={() => postPicked.set(false)}>\r\n    ← Back\r\n  </button>\r\n  <!-- Title -->\r\n  <h1 class=\"mt-1\">{title}</h1>\r\n\r\n  <!-- Author -->\r\n  {#await authorPromise then author}\r\n    <p class=\"lead\">\r\n      by\r\n      <em>{author.first_name} {author.last_name}</em>\r\n    </p>\r\n    <hr />\r\n\r\n    <!-- Date/Time -->\r\n    <p>\r\n      Posted on {date.month} {date.datePrefixed}, {date.year} {date.hours}:{date.minutes}\r\n    </p>\r\n    <hr />\r\n    <hr />\r\n\r\n    <!-- Post Content -->\r\n    <p class=\"lead\">{slogan}</p>\r\n    <p>{text}</p>\r\n    <hr />\r\n\r\n    <!-- Comments Form -->\r\n    <!-- only logged in user can comment -->\r\n    {#if $userLoggedIn}\r\n      <CommentForm />\r\n    {/if}\r\n\r\n    <!-- Comments section -->\r\n    <div class=\"d-flex flex-column mb-4\">\r\n      {#each $postObject.comments as comment, index}\r\n        <Comment {...comment} {index} authorId={author.id} />\r\n      {/each}\r\n    </div>\r\n  {/await}\r\n</div>\r\n","<script>\r\n  import { sendData } from \"../../utilities/helperFunctions\";\r\n  import { formPicked, userLoggedIn } from \"../../utilities/stores\";\r\n\r\n// used for bootstrap's form's validation highlight\r\n  let validated = false;\r\n\r\n  function submitPostForm(event) {\r\n    const form = event.target;\r\n    const body = {\r\n      author_id: $userLoggedIn,\r\n      title: form.title.value,\r\n      slogan: form.slogan.value,\r\n      text: form.text.value,\r\n      date: new Date().toISOString(),\r\n      comments: []\r\n    };\r\n    sendData(`/posts`, \"POST\", body)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert(\"Success\");\r\n        } else {\r\n          alert(\"Failed at posting.\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert(\r\n          `Failed at posting.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}`\r\n        );\r\n      });\r\n    formPicked.set(false);\r\n  }\r\n</script>\r\n\r\n<form\r\n  class=\"col-lg-8 mx-auto my-5\"\r\n  class:was-validated={validated}\r\n  on:submit|preventDefault={submitPostForm}>\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"formTitle\">Title</label>\r\n    <div class=\"col-sm-10\">\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"formTitle\"\r\n        name=\"title\"\r\n        type=\"text\"\r\n        pattern=\"[\\w\\s]+\"\r\n        maxlength=\"50\"\r\n        required\r\n        placeholder=\"50 characters max...\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"slogan\">Slogan</label>\r\n    <div class=\"col-sm-10\">\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"slogan\"\r\n        name=\"slogan\"\r\n        type=\"text\"\r\n        pattern=\"[\\w\\s]+\"\r\n        maxlength=\"50\"\r\n        required\r\n        placeholder=\"Catching summary, 50 characters max...\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"postText\">Text</label>\r\n    <div class=\"col-sm-10\">\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"postText\"\r\n        name=\"text\"\r\n        rows=\"3\"\r\n        minlength=\"10\"\r\n        required\r\n        placeholder=\"Text for your post...\">Hello World</textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-inline row justify-content-end\">\r\n    <div class=\"col-md-2 px-md-0\">\r\n      <button\r\n        class=\"btn btn-primary btn-block\"\r\n        type=\"submit\"\r\n        on:click|once={() => (validated = true)}>\r\n        Post\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-2 px-md-0\">\r\n      <button class=\"btn btn-secondary btn-block\" type=\"reset\">Reset</button>\r\n    </div>\r\n    <div class=\"col-md-2 pl-md-0\">\r\n      <button\r\n        class=\"btn btn-danger btn-block\"\r\n        on:click={() => formPicked.set(false)}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","<script>\r\n  import {\r\n    getData,\r\n    parseDate,\r\n    sendData\r\n  } from \"../../utilities/helperFunctions\";\r\n  import {\r\n    postPicked,\r\n    postObject,\r\n    pageCurrent,\r\n    searchFilter,\r\n    userLoggedIn\r\n  } from \"../../utilities/stores\";\r\n\r\n  export let id, title, slogan, text, author_id, date, comments;\r\n  const { month, year, datePrefixed, hours, minutes } = parseDate(date);\r\n  // get author's info\r\n  const userPromise = getData(`/users/${author_id}`);\r\n\r\n  // used to hide a deleted post visually until next refresh from the database\r\n  let deleted = false;\r\n\r\n  function revealPost() {\r\n    postPicked.set(true);\r\n    postObject.set({\r\n      id: id,\r\n      title: title,\r\n      slogan: slogan,\r\n      text: text,\r\n      authorPromise: userPromise,\r\n      date: {\r\n        month: month,\r\n        year: year,\r\n        datePrefixed: datePrefixed,\r\n        hours: hours,\r\n        minutes: minutes\r\n      },\r\n      comments: comments\r\n    });\r\n  }\r\n\r\n  function deletePost() {\r\n    sendData(`/posts/${id}`, \"DELETE\")\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert(\"Success\");\r\n        } else {\r\n          alert(\"Failed at deleting the post\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert(\r\n          `Failed at deleting the post.\\nEither server might be dead or your connection lost.\\nReason: ${e.message}`\r\n        );\r\n      });\r\n    // reload the current page so changes are visible\r\n    deleted = true;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .deleted {\r\n    display: none;\r\n  }\r\n</style>\r\n\r\n{#await userPromise then user}\r\n  <div class:deleted class=\"card mb-4\">\r\n    <div class=\"card-body\">\r\n      <div class=\"d-flex justify-content-between align-items-start mt-0\">\r\n        <h2 class=\"card-title\">{title}</h2>\r\n        <!-- only author of this post can delete it -->\r\n        {#if author_id === $userLoggedIn}\r\n          <button type=\"button\" class=\"btn btn-danger\" on:click={deletePost}>\r\n            <i class=\"far fa-trash-alt\" />\r\n          </button>\r\n        {/if}\r\n      </div>\r\n      <p class=\"card-text\">{slogan}</p>\r\n      <button class=\"btn btn-primary\" on:click={revealPost}>Read More →</button>\r\n    </div>\r\n    <div class=\"card-footer text-muted\">\r\n      Posted on {month} {datePrefixed}, {year} {hours}:{minutes} by\r\n      <em>{user.first_name} {user.last_name}</em>\r\n    </div>\r\n  </div>\r\n{/await}\r\n","<script>\r\n  import { getData, debounce } from \"../../utilities/helperFunctions\";\r\n  import { searchFilter } from \"../../utilities/stores\";\r\n\r\n  let searchString = \"\";\r\n  $: searchFilter.set(searchString);\r\n\r\n  function createSearchString(event) {\r\n    // Make sure to empty the searchString\r\n    searchString = \"\";\r\n    // avoid sending requests to API if the searh field is empty\r\n    if (event.target.value) {\r\n      const searchText = event.target.value.trim();\r\n      const usersPromise = getData(`/users?q=${searchText}`).then(data => {\r\n        data.forEach(user => {\r\n          searchString += `author_id=${user.id}&`;\r\n        });\r\n      });\r\n\r\n      /* It might happen that searched word might be found in both users and *  posts.\r\n       */\r\n      const postsTitlePromise = getData(`/posts?title_like=${searchText}`);\r\n      const postsSloganPromise = getData(`/posts?slogan_like=${searchText}`);\r\n\r\n      Promise.all([postsTitlePromise, postsSloganPromise])\r\n        .then(values => values.filter(value => value.length))\r\n        .then(arrayOfFiltered => {\r\n          if (arrayOfFiltered.length) {\r\n            /*Promise.All results in an array of arrays, so in case two promises results passed the filter we have to process their data this way\r\n             */\r\n            arrayOfFiltered.forEach(data => {\r\n              data.forEach(post => {\r\n                searchString += `id=${post.id}&`;\r\n              });\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"card my-4\">\r\n  <label for=\"search\" class=\"h5 card-header\">Search</label>\r\n  <div class=\"card-body\">\r\n    <div class=\"input-group\">\r\n      <input\r\n        type=\"search\"\r\n        id=\"search\"\r\n        class=\"form-control\"\r\n        placeholder=\"Name, Lastname, Title or slogan\"\r\n        on:input={debounce(createSearchString, 600)} />\r\n    </div>\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { getData, debounce } from \"../../utilities/helperFunctions\";\r\n  import { searchFilter, sortDateFilter } from \"../../utilities/stores\";\r\n\r\n  let checked = false;\r\n// sets sort order on the database for Main component\r\n  $: if (checked) {\r\n    sortDateFilter.set(\"_sort=date&_order=asc&\");\r\n  } else {\r\n    sortDateFilter.set(\"_sort=date&_order=desc&\");\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    display: none;\r\n  }\r\n\r\n  label::after {\r\n    border-bottom: 0;\r\n    border-left: 0.3em solid transparent;\r\n    border-right: 0.3em solid transparent;\r\n    border-top: 0.3em solid;\r\n    content: \"\";\r\n    display: inline-block;\r\n    margin-left: 0.255em;\r\n    vertical-align: 0.255em;\r\n  }\r\n\r\n  input:checked + label::after {\r\n    border-bottom: 0.3em solid;\r\n    border-top: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"ml-1\">\r\n  <input type=\"checkbox\" id=\"dateSort\" bind:checked />\r\n  <label for=\"dateSort\" class=\"h5\">Date</label>\r\n</div>\r\n","<footer class=\"py-md-4 py-2 bg-dark text-light\">\r\n  <div class=\"container text-center\">\r\n    <h4>Philipp Lypniakov @ {new Date().getFullYear()}</h4>\r\n  </div>\r\n</footer>","<script>\r\n  import { afterUpdate } from \"svelte\";\r\n  import { fade } from \"svelte/transition\";\r\n  import Imageslider from \"../Imageslider/Imageslider.svelte\";\r\n  import Pagination from \"./Pagination.svelte\";\r\n  import PendingSpinner from \"./PendingSpinner.svelte\";\r\n  import Post from \"./Post.svelte\";\r\n  import PostCreateForm from \"./PostCreateForm.svelte\";\r\n  import PostItem from \"./PostItem.svelte\";\r\n  import SearchWidget from \"./SearchWidget.svelte\";\r\n  import SortWidget from \"./SortWidget.svelte\";\r\n  import Footer from \"../Footer/Footer.svelte\";\r\n  import { getData } from \"../../utilities/helperFunctions\";\r\n  import {\r\n    postPicked,\r\n    searchFilter,\r\n    pageCurrent,\r\n    formPicked,\r\n    userLoggedIn,\r\n    sortDateFilter\r\n  } from \"../../utilities/stores\";\r\n\r\n  // used to bind main HTML element\r\n  let main;\r\n  // reactive declaration for fetching posts. Refreshes anytime any of inserted stores change\r\n  $: dataPromise = getData(\r\n    `/posts?${$searchFilter}${$sortDateFilter}_page=${$pageCurrent}`\r\n  );\r\n\r\n/* everytime our main window updates, i.e. we visit post, we slide pages,\r\nor main element scrolls up\r\n*/\r\n  afterUpdate(() => (main.scrollTop = 0));\r\n</script>\r\n\r\n<style>\r\n  [data-window=\"main\"] {\r\n    height: inherit;\r\n    overflow-y: scroll;\r\n  }\r\n  \r\n  .failed, .pending {\r\n    height: 58vh;\r\n  }\r\n\r\n  .invisible {\r\n    display: none;\r\n  }\r\n\r\n  .failed ~ .search,\r\n  .pending ~ .search {\r\n    display: none;\r\n  }\r\n</style>\r\n\r\n<div data-window=\"main\" bind:this={main}>\r\n  <main class=\"container\">\r\n\r\n    <Imageslider />\r\n\r\n    <div class=\"row\" id=\"blog\">\r\n      <div class:invisible={$postPicked || $formPicked} class=\"col-lg-12 mt-4\">\r\n        <SortWidget />\r\n      </div>\r\n      {#await dataPromise}\r\n        <!-- Pending spinner wile data loads-->\r\n        <div class=\"pending col-md-12\">\r\n          <PendingSpinner />\r\n        </div>\r\n      {:then posts}\r\n        {#if posts.failed}\r\n        <!-- server is online but adress is wrong/changed -->\r\n          <article class=\"failed my-2 mx-auto\">\r\n            <h2 class=\"text-danger\">Can't load the page.</h2>\r\n            <p class=\"h3 text-danger\">Status: {posts.status}.</p>\r\n            <p class=\"h3 text-danger\">Reason: {posts.reason}.</p>\r\n          </article>\r\n        {:else if !$postPicked && !$formPicked}\r\n          <!-- Blog Entries Column -->\r\n          <div class=\"col-lg-8 mt-4\">\r\n          <!-- only logged in users can post -->\r\n            {#if $userLoggedIn}\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-block btn-lg mb-2\"\r\n                on:click={() => formPicked.set(true)}>\r\n                Add new post\r\n              </button>\r\n            {/if}\r\n            {#each posts as post}\r\n              <PostItem {...post} />\r\n            {/each}\r\n            <Pagination />\r\n          </div>\r\n        {:else if $formPicked}\r\n          <PostCreateForm />\r\n        {:else}\r\n          <Post />\r\n        {/if}\r\n        <!-- if server is down -->\r\n      {:catch error}\r\n        <!-- On error message -->\r\n        <article class=\"failed my-4 mx-auto\">\r\n          <h2 class=\"text-danger\">Failed at loading data.</h2>\r\n          <p class=\"h3\">{error.message}</p>\r\n          <p class=\"h3\">It seems the server is...dead</p>\r\n        </article>\r\n      {/await}\r\n      <div class:invisible={$postPicked || $formPicked} class=\"search col-lg-4\">\r\n        <SearchWidget />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </main>\r\n<Footer />\r\n</div>\r\n","export default \"media/about_cabins.jpg\"","export default \"media/about_space.jpg\"","export default \"media/about_tree.jpg\"","<script>\r\n  import img1 from \"../../media/about_cabins.jpg\";\r\n  import img2 from \"../../media/about_space.jpg\";\r\n  import img3 from \"../../media/about_tree.jpg\";\r\n  import Footer from \"../Footer/Footer.svelte\";\r\n</script>\r\n\r\n<style>\r\n  [id=\"about\"] {\r\n    height: inherit;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  img {\r\n    height: 23vw;\r\n    object-fit: cover;\r\n    object-position: center bottom;\r\n    width: 32vh;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    img {\r\n      height: 60vw;\r\n      width: 83vw;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div id=\"about\" class=\"w-100 pt-2\">\r\n  <article class=\"col-sm-8 my-5 mx-auto\">\r\n    <h2 class=\"text-center\">About</h2>\r\n    <section>\r\n      <h3>Sub-header 1</h3>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut fringilla,\r\n        sem ac molestie pellentesque, massa purus consequat tellus, ac cursus\r\n        sapien erat a nisi. Integer congue lectus id odio vestibulum\r\n        scelerisque. Nam sed nibh ex. Pellentesque in placerat sem. Duis quis\r\n        arcu vel nibh hendrerit scelerisque. Suspendisse eget nisi eu velit\r\n        suscipit semper. Proin lacinia, ligula ut rutrum ornare, nunc lacus\r\n        pretium neque, vitae venenatis ex mauris ac dolor. Ut non purus nec\r\n        tortor tincidunt interdum. Sed egestas neque dui, quis vehicula eros\r\n        lobortis quis. Quisque vel congue velit.\r\n      </p>\r\n    </section>\r\n    <section>\r\n      <h3>Sub-header 2</h3>\r\n      <p>\r\n        Ut odio tellus, sodales eget luctus in, rhoncus sed mi. Nulla nec semper\r\n        nisi, et fermentum neque. Morbi at rhoncus libero. Nulla nec tincidunt\r\n        massa. Suspendisse ac tempor massa, at lacinia dui. Orci varius natoque\r\n        penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nulla\r\n        vestibulum lorem quis nisl finibus ornare. Ut pretium consequat mi, sed\r\n        consectetur leo cursus nec. Proin felis sem, scelerisque ac laoreet nec,\r\n        fringilla ac nisi. Fusce eget pulvinar ante. Phasellus porta scelerisque\r\n        elit eu luctus. In dapibus purus nec quam sodales, a feugiat metus\r\n        gravida. Etiam consectetur iaculis rhoncus. Praesent eu metus ut lacus\r\n        eleifend maximus nec ac ipsum. Aenean pharetra, justo quis sodales\r\n        aliquet, risus tortor iaculis libero, eget tincidunt ipsum metus sit\r\n        amet eros. Nullam quis nibh sed arcu vehicula efficitur.\r\n      </p>\r\n    </section>\r\n    <section>\r\n      <h3>Sub-header 3</h3>\r\n      <div class=\"d-flex flex-lg-row flex-column align-items-center mx-auto\">\r\n        <img class=\"col mt-2\" src={img1} alt=\"cabins\" />\r\n        <img class=\"col mt-2\" src={img2} alt=\"space\" />\r\n        <img class=\"col mt-2\" src={img3} alt=\"tree\" />\r\n      </div>\r\n\r\n    </section>\r\n\r\n  </article>\r\n\r\n<Footer />\r\n</div>\r\n","<script>\r\n  import { pagePicked } from \"./utilities/stores\";\r\n  import Navbar from \"./components/Navbar/Navbar.svelte\";\r\n  import Login from \"./components/Login/Login.svelte\";\r\n  import Imageslider from \"./components/Imageslider/Imageslider.svelte\";\r\n  import Main from \"./components/Main/Main.svelte\";\r\n  import About from \"./components/About/About.svelte\";\r\n  import Contacts from \"./components/Contacts/Contacts.svelte\";\r\n</script>\r\n\r\n<style>\r\n  :global(body) {\r\n    height: 100vh;\r\n  }\r\n</style>\r\n\r\n<Navbar />\r\n<Login />\r\n{#if $pagePicked === '#about'}\r\n  <About />\r\n{:else if $pagePicked === '#contacts'}\r\n  <Contacts />\r\n{:else}\r\n  <Main />\r\n{/if}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import App from \"./App.svelte\";\r\n\r\n/* Bootstrap to bundle*/\r\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap-reboot.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst app = new App({\r\n  target: document.body\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","const","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","component","store","callback","unsub","$$","on_destroy","push","unsubscribe","stylesheet","now","window","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","running","run_tasks","task","delete","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","let","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","setAttribute","set_data","set_style","key","style","setProperty","toggle_class","toggle","classList","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","get_current_component","Error","onMount","on_mount","promise","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","shift","update","pop","has","add","fragment","dirty","before_update","ctx","after_update","dispatch","direction","kind","type","detail","e","dispatchEvent","createEvent","initCustomEvent","outros","outroing","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","css","easing","tick","fulfil","then","handle_promise","info","token","index","resolved","child_ctx","current","blocks","m","mount","error","catch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","mount_component","new_on_destroy","map","destroy_component","make_dirty","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","hydrate","l","Array","from","childNodes","SvelteComponent","$destroy","$on","splice","$set","subscriber_queue","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","slideIndex","increment","decrement","createSlideIndexStore","pageCurrent","createPageCounterStore","postObject","postPicked","formPicked","userLoggedIn","submitType","searchFilter","sortDateFilter","pagePicked","getData","query","fetch","response","ok","json","failed","status","reason","statusText","getUser","email","password","find","record","createCookie","maxAge","cookie","encodeURIComponent","getCookieFor","propertyName","cookies","cookiesDecoded","decodeURIComponent","position","substring","sendData","method","body","headers","Content-Type","JSON","stringify","months","parseDate","date","dateObj","month","getMonth","year","getFullYear","dateNumber","getDate","getHours","getMinutes","href","click_handler","links","$submitType","collapsed","handleClick","link","collapse","validated","submitLogin","savedId","parseInt","form","result","id","$userLoggedIn","logged_in","alert","username","first_name","firstName","last_name","lastName","avatar","$slideIndex","imageIndecies","fade","ref","getComputedStyle","opacity","caption","color","images","img1","img2","img3","screenReaderValue","slice","autoSlideInterval","clearInterval","setInterval","$pageCurrent","pageEnd","$searchFilter","user","user_id","authorId","hours","minutes","datePrefixed","comment","deleteComment","userPromise","comments","$postObject","postId","updateComment","textarea","main","querySelector","toISOString","scrollTo","scrollHeight","author","slogan","authorPromise","title","submitPostForm","author_id","deleted","revealPost","deletePost","ms","timer","createSearchString","clearTimeout","setTimeout","apply","args","searchString","searchText","trim","postsTitlePromise","postsSloganPromise","all","values","arrayOfFiltered","post","checked","message","posts","$postPicked","$formPicked","dataPromise","scrollTop","$sortDateFilter","$pagePicked","styleInject","insertAt","getElementsByTagName","firstChild","styleSheet","cssText","App"],"mappings":"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"}